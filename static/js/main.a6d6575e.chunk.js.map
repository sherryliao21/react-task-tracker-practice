{"version":3,"sources":["components/Button.js","components/Header.js","components/Footer.js","components/About.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","className","style","backgroundColor","defaultProps","Header","title","onAdd","showAdd","useLocation","Footer","to","About","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","event","preventDefault","alert","type","placeholder","value","onChange","target","currentTarget","checked","App","setShowAdd","setTasks","useEffect","a","fetchTasks","taskFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updatedTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6d6575e.chunk.js","sourcesContent":["import React from 'react'\nimport PropType from 'prop-types'\n\nconst Button = ({ color, text, onClick }) => {\n  return <button onClick={ onClick } className='btn' style={{ backgroundColor: color }}>{text}</button>\n}\n\nButton.defaultProps = {\n  backgroundColor: 'steelblue'\n}\n\nButton.propTypes = {\n  color: PropType.string,\n  text: PropType.string,\n  onClick: PropType.func.isRequired\n}\n\nexport default Button\n","import PropType from 'prop-types'\nimport { useLocation } from 'react-router-dom'\nimport Button from './Button'\n\nconst Header = ({ title, onAdd, showAdd }) => {\n  const location = useLocation()\n\n  return (\n    <header className='header'>\n      <h1>{title}</h1>\n      {/* {location.pathname === '/react-task-tracker-practice' && <Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} onClick={onAdd} />} */}\n      <Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} onClick={onAdd} />\n    </header>\n  )\n}\n\nHeader.defaultProps = {\n  title: 'Task Tracker',\n}\n\nHeader.propTypes = {\n  title: PropType.string.isRequired,\n}\n\n// CSS in JS\n// const headerStyle = {\n//   color: 'red',\n//   backgroundColor: 'blue'\n// }\n\nexport default Header\n","import { Link } from 'react-router-dom'\n\nconst Footer = () => {\n  return (\n    <footer>\n      <p>Copyright &copy; 2021</p>\n      <Link to=\"/about\">About</Link>\n    </footer>\n  )\n}\n\nexport default Footer\n","import { Link } from 'react-router-dom'\n\nconst About = () => {\n  return (\n    <div>\n      <h4>Version 1.0.0</h4>\n      <Link to=\"/\">Go back</Link>\n    </div>\n  )\n}\nexport default About\n","import { FaTimes } from 'react-icons/fa'\n\nconst Task = ({ task, onDelete, onToggle }) => {\n  return (\n    <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id) }>\n      <h3>{task.text} <FaTimes style={{ color: 'red', cursor: 'pointer' }} onClick={ ()=> onDelete(task.id)} /></h3>\n      <p>{ task.day }</p>\n    </div>\n  )\n}\n\nexport default Task","import React from 'react'\nimport Task from './Task'\n\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n  \n  return (\n    <>\n      {tasks.map((task) => (<Task key={task.id} task={task} onDelete={onDelete} onToggle={ onToggle }/>)) }\n    </>\n  )\n}\n\nexport default Tasks\n","import { useState } from \"react\"\n\nconst AddTask = ({ onAdd }) => {\n  // setting state default value\n  const [text, setText] = useState('')\n  const [day, setDay] = useState('')\n  const [reminder, setReminder] = useState(false)\n\n  // submit event\n  const onSubmit = (event) => {\n    // prevent actually submitting to a page\n    event.preventDefault()\n    // form validation\n    if (!text) {\n      alert('Please add a task!')\n      return\n    }\n    // add task with prop\n    onAdd({ text, day, reminder })\n    // after adding task, clear the inputs\n    setText('')\n    setDay('')\n    setReminder(false)\n  }\n  return (\n    <form className='add-form' onSubmit={ onSubmit }>\n      <div className='form-control'>\n        <label>Task</label>\n        <input type='text' placeholder='Add Task' value={text} onChange={(event) => setText(event.target.value) }/>\n      </div>\n      <div className='form-control'>\n        <label>Day & Time</label>\n        <input type='date' placeholder='Add Day & Time' value={day} onChange={(event) => setDay(event.target.value) } />\n      </div>\n      <div className='form-control form-control-check'>\n        <label>Reminder</label>\n        <input type='checkbox' value={reminder} onChange={(event) => setReminder(event.currentTarget.checked)} checked={ reminder }/>\n      </div>\n      <input type=\"submit\" value='Save Task' className='btn btn-block' />\n    </form>\n  )\n}\nexport default AddTask","import Header from './components/Header'\nimport Footer from './components/Footer'\nimport About from './components/About'\nimport Tasks from './components/Tasks'\nimport AddTasks from './components/AddTask'\nimport { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nfunction App() {\n  const [showAdd, setShowAdd] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  // things to show when page load (side effect)\n  useEffect(() => {\n    const getTasks = async () => {\n      const taskFromServer = await fetchTasks()\n      setTasks(taskFromServer)\n    }\n    getTasks()\n  }, [])\n\n  // Fetch Tasks\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json()\n    return data\n  }\n   \n  // Fetch Task\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\n    const data = await res.json()\n    return data\n  }\n\n  // Add Tasks\n  const addTask = async (task) => {\n    // UI\n    // const id = Math.floor(Math.random() * 10000) + 1\n    // const newTask = { id, ...task }\n    // setTasks([...tasks, newTask])\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    })\n    const data = await res.json()\n    setTasks([...tasks, data])\n  }\n\n  // Delete Tasks\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE'\n    })\n    setTasks(tasks.filter((task) => task.id !== id))\n\n  }\n\n  // Toggle Reminder\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id)\n    const updatedTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedTask)\n    })\n\n    const data = await res.json()\n\n    setTasks(tasks.map((task) => task.id === id ? {...task, reminder: data.reminder} : task))\n  }\n  \n  return (\n    <Router>\n    <div className=\"container\">\n      <Header onAdd={() => setShowAdd(!showAdd)} showAdd={showAdd }/>\n      <Route path='/' exact render={(props) => (\n        <>\n          {showAdd && <AddTasks onAdd={addTask} /> }\n          {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} /> : 'No Tasks yet.'}      \n        </>\n      )} />\n      <Route path='/about' component={About} />\n      <Footer />\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}